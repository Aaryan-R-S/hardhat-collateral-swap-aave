/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SwapCollateralAave,
  SwapCollateralAaveInterface,
} from "../../contracts/SwapCollateralAave";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "wethToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingPoolAddressesProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "daiEthPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "daiToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ApprovedERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DaiTokenBorrowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DaiTokenRepayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "GotWeth",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountDaiToBorrowWei",
        type: "uint256",
      },
    ],
    name: "borrowDai",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBorrowUserData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiEthPriceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaiToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolAdressesProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWethToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountDaiToRepayWei",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "setLendingPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b5060405161139a38038061139a8339818101604052608081101561003457600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291905050508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050505060805160601c60a05160601c60c05160601c60e05160601c6111e96101b1600039806106fe528061082752806109e55280610e4c52508061039052806105cf525080610d405280610e2452508061042c52806104af5280610af55280610b765280610f0752506111e96000f3fe6080604052600436106100c25760003560e01c80634c252f911161007f578063a5e7170711610059578063a5e717071461026d578063a7db80cc146102ae578063bad4a01f146102ef578063c7ad1b551461032a576100c2565b80634c252f91146101da5780636c14e6ce1461021b578063803eaf6414610256576100c2565b80630261bf8b146100c7578063088bdde114610108578063107c279f146101495780632649aa1614610153578063371fd8e61461017e57806346af1cc5146101ac575b600080fd5b3480156100d357600080fd5b506100dc610363565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011457600080fd5b5061011d61038c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101516103b4565b005b34801561015f57600080fd5b506101686105ca565b6040518082815260200191505060405180910390f35b6101aa6004803603602081101561019457600080fd5b81019080803590602001909291905050506106a3565b005b6101d8600480360360208110156101c257600080fd5b810190808035906020019092919050505061094e565b005b3480156101e657600080fd5b506101ef610af1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022757600080fd5b506102546004803603602081101561023e57600080fd5b8101908080359060200190929190505050610b19565b005b34801561026257600080fd5b5061026b610d3e565b005b34801561027957600080fd5b50610282610e20565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ba57600080fd5b506102c3610e48565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102fb57600080fd5b506103286004803603602081101561031257600080fd5b8101908080359060200190929190505050610e70565b005b34801561033657600080fd5b5061033f61100a565b60405180848152602001838152602001828152602001935050505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000341161042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f53776170436f6c6c61746572616c416176655f5f4e6f45544853656e7400000081525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b505050505060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561053457600080fd5b505afa158015610548573d6000803e3d6000fd5b505050506040513d602081101561055e57600080fd5b810190808051906020019092919050505090503373ffffffffffffffffffffffffffffffffffffffff167fd61f5e90abe7f0a0519411dabbcd644c5aac686f40018042c5aec046b4d63a833483604051808381526020018281526020019250505060405180910390a250565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063357600080fd5b505afa158015610647573d6000803e3d6000fd5b505050506040513d60a081101561065d57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150508091505090565b600081116106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806111226028913960400191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b505050506040513d60208110156107d757600080fd5b81019080805190602001909291905050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663573ade817f0000000000000000000000000000000000000000000000000000000000000000836001336040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001945050505050602060405180830381600087803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b505050506040513d60208110156108eb57600080fd5b8101908080519060200190929190505050503373ffffffffffffffffffffffffffffffffffffffff167fd2796f08cd5a50bc35d3d25202b8f75db0b2f87ace0ecd44393624a3b6c32d5e826040518082815260200191505060405180910390a250565b600081116109a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806111226028913960400191505060405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a415bcad7f00000000000000000000000000000000000000000000000000000000000000008360016000336040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b158015610a8857600080fd5b505af1158015610a9c573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f1a0cf17679118b33489e18cf65240fc5707cdda1faba6a40b4ce69c38fe30cd6826040518082815260200191505060405180910390a250565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008111610b72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806111916023913960400191505060405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c2557600080fd5b505af1158015610c39573d6000803e3d6000fd5b505050506040513d6020811015610c4f57600080fd5b810190808051906020019092919050505090506001151581151514610cbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061114a6024913960400191505060405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f52774a6f1a9a46300eddba0ab1f535fbb9fbc76fa0979cfb3051e6b645ac7d5f60405160405180910390a45050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610da457600080fd5b505afa158015610db8573d6000803e3d6000fd5b505050506040513d6020811015610dce57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008111610ec9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061116e6023913960400191505060405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8eda9df7f0000000000000000000000000000000000000000000000000000000000000000833360006040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b158015610fa157600080fd5b505af1158015610fb5573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142826040518082815260200191505060405180910390a250565b60008060008060008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bf92857c336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060c06040518083038186803b15801561109a57600080fd5b505afa1580156110ae573d6000803e3d6000fd5b505050506040513d60c08110156110c457600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505092509250925082828295509550955050505090919256fe53776170436f6c6c61746572616c416176655f5f4e6f446169416d6f756e7453706563696669656453776170436f6c6c61746572616c416176655f5f4e6f7441626c65546f417070726f766553776170436f6c6c61746572616c416176655f5f4e6f57657468546f4465706f73697453776170436f6c6c61746572616c416176655f5f4e6f57657468546f417070726f7665a2646970667358221220208143acb868caaaf4e9a28723531b9e32365e766eac8ce51e898efa24d838a864736f6c634300060c0033";

type SwapCollateralAaveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapCollateralAaveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapCollateralAave__factory extends ContractFactory {
  constructor(...args: SwapCollateralAaveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    wethToken: PromiseOrValue<string>,
    lendingPoolAddressesProvider: PromiseOrValue<string>,
    daiEthPriceFeed: PromiseOrValue<string>,
    daiToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapCollateralAave> {
    return super.deploy(
      wethToken,
      lendingPoolAddressesProvider,
      daiEthPriceFeed,
      daiToken,
      overrides || {}
    ) as Promise<SwapCollateralAave>;
  }
  override getDeployTransaction(
    wethToken: PromiseOrValue<string>,
    lendingPoolAddressesProvider: PromiseOrValue<string>,
    daiEthPriceFeed: PromiseOrValue<string>,
    daiToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      wethToken,
      lendingPoolAddressesProvider,
      daiEthPriceFeed,
      daiToken,
      overrides || {}
    );
  }
  override attach(address: string): SwapCollateralAave {
    return super.attach(address) as SwapCollateralAave;
  }
  override connect(signer: Signer): SwapCollateralAave__factory {
    return super.connect(signer) as SwapCollateralAave__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapCollateralAaveInterface {
    return new utils.Interface(_abi) as SwapCollateralAaveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapCollateralAave {
    return new Contract(address, _abi, signerOrProvider) as SwapCollateralAave;
  }
}
